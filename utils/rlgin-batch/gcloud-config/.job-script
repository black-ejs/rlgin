#!/bin/bash
echo "******************************************** "
echo "****  rlgin-batch job ${BATCH_JOB_ID} task ${BATCH_TASK_INDEX} "
echo "******************************************** "
echo "environment at job invocation:"
set

# backoff to avoid race conditions, 
# especially over work with shared images in the bucket
let sleepsecs=${BATCH_TASK_INDEX}*5
echo "******************************************** "
echo sleeping ${sleepsecs} seconds -- I am BATCH_TASK_INDEX=${BATCH_TASK_INDEX}
echo "******************************************** "
sleep ${sleepsecs}

export JOB_TAG="${BATCH_JOB_ID}-t${BATCH_TASK_INDEX}"
export RLGIN_BATCH_USER="edward_schwarz_tonigooddog_com"
export RLGIN_BATCH_TMP_BOOTSTRAP_DIR=/var/tmp/${JOB_TAG}-bootstrap
echo JOB_TAG="${JOB_TAG}"
echo RLGIN_BATCH_TMP_BOOTSTRAP_DIR="${RLGIN_BATCH_TMP_BOOTSTRAP_DIR}"

echo updating code base.... 
export RLGIN_BATCH_REPO_URL='https://github.com/black-ejs/rlgin'
TMPREPO=${RLGIN_BATCH_TMP_BOOTSTRAP_DIR}/rlgin-bootstrap-repo
repoback=`pwd`
echo RLGIN_BATCH_REPO_URL="${RLGIN_BATCH_REPO_URL}"
echo TMPREPO="${TMPREPO}"
echo "   +++ mkdir -p ${RLGIN_BATCH_TMP_BOOTSTRAP_DIR}"
mkdir -p ${RLGIN_BATCH_TMP_BOOTSTRAP_DIR}
echo "   +++ git clone -q ${RLGIN_BATCH_REPO_URL} ${TMPREPO} 2>&1"
git clone -q ${RLGIN_BATCH_REPO_URL} ${TMPREPO} 2>&1
echo "   +++ cd ${repoback}"
cd "${repoback}"
echo "   +++ ls -latr ${TMPREPO}"
ls -latr ${TMPREPO}

BOOTSTRAP_SCRIPTS_PATH=utils/rlgin-batch/gcloud-config
echo copying bootstrap scripts from ${BOOTSTRAP_SCRIPTS_PATH}

echo updating /etc/environment.... 
cp ${TMPREPO}/${BOOTSTRAP_SCRIPTS_PATH}/.etc-environment-initialize ${RLGIN_BATCH_TMP_BOOTSTRAP_DIR}
cat /etc/environment >> ${RLGIN_BATCH_TMP_BOOTSTRAP_DIR}/.etc-environment-initialize
sudo mv ${RLGIN_BATCH_TMP_BOOTSTRAP_DIR}/.etc-environment-initialize /etc/environment

echo ls -latr /home
ls -latr /home
if [ ! -e /home/${RLGIN_BATCH_USER} ]
then
    echo "### /home/${RLGIN_BATCH_USER} not found, attempting to force user creation"
    echo "   +++ mkdir -p /home/${RLGIN_BATCH_USER}"
    mkdir -p /home/${RLGIN_BATCH_USER}
    echo "   +++ chown ${RLGIN_BATCH_USER}:${RLGIN_BATCH_USER} /home/${RLGIN_BATCH_USER}"
    chown ${RLGIN_BATCH_USER}:${RLGIN_BATCH_USER} /home/${RLGIN_BATCH_USER}
    echo "   +++ ls -latr /home/${RLGIN_BATCH_USER}"
    ls -latr /home/${RLGIN_BATCH_USER}
    echo "   +++ su -${RLGIN_BATCH_USER} -c \"id; whoami; pwd; ls -latr; exit\""
    su - ${RLGIN_BATCH_USER} -c "id; whoami; pwd; ls -latr; exit" 
    #echo "   +++ ssh ${RLGIN_BATCH_USER}@localhost \"exit\""
    #ssh ${RLGIN_BATCH_USER}@localhost "exit"
    echo "   +++ ls -latr /home/${RLGIN_BATCH_USER}"
    ls -latr /home/${RLGIN_BATCH_USER}
fi
echo ls -latr /home/${RLGIN_BATCH_USER}
ls -latr /home/${RLGIN_BATCH_USER}

TARGET_SCRIPT=/home/${RLGIN_BATCH_USER}/.assure-mounts.sh
echo copying ${TARGET_SCRIPT} to home directory
echo cp ${TMPREPO}/${BOOTSTRAP_SCRIPTS_PATH}/.assure-mounts.sh ${TARGET_SCRIPT}
cp ${TMPREPO}/${BOOTSTRAP_SCRIPTS_PATH}/.assure-mounts.sh ${TARGET_SCRIPT}
chown ${RLGIN_BATCH_USER}:${RLGIN_BATCH_USER} ${TARGET_SCRIPT}

TARGET_SCRIPT=/home/${RLGIN_BATCH_USER}/.bashrc
echo updating ${TARGET_SCRIPT}.... 
cp ${TMPREPO}/${BOOTSTRAP_SCRIPTS_PATH}/.bashrc-initialize ${RLGIN_BATCH_TMP_BOOTSTRAP_DIR}
if [[ -e ${TARGET_SCRIPT} ]]
then
    cat ${TARGET_SCRIPT} >> ${RLGIN_BATCH_TMP_BOOTSTRAP_DIR}/.bashrc-initialize
fi
mv ${RLGIN_BATCH_TMP_BOOTSTRAP_DIR}/.bashrc-initialize ${TARGET_SCRIPT}
chown ${RLGIN_BATCH_USER}:${RLGIN_BATCH_USER} ${TARGET_SCRIPT}

echo copying launch script to home directory
TARGET_SCRIPT=/home/${RLGIN_BATCH_USER}/.rb-job-launch
echo cp ${TMPREPO}/${BOOTSTRAP_SCRIPTS_PATH}/.rb-job-launch ${TARGET_SCRIPT}
cp ${TMPREPO}/${BOOTSTRAP_SCRIPTS_PATH}/.rb-job-launch ${TARGET_SCRIPT}
chown ${RLGIN_BATCH_USER}:${RLGIN_BATCH_USER} ${TARGET_SCRIPT}

echo checking launch script
echo "  +++ pre-check: launch script is: \"${RLGIN_BATCH_JOB_SCRIPT}\""
echo "  +++ invoking rb-save-run-script"
rb_save_run_script
echo "  +++ pre-validate: launch script is: \"${RLGIN_BATCH_JOB_SCRIPT}\""
if [ ! -e "${RLGIN_BATCH_JOB_SCRIPT}" ]
then
    RLGIN_BATCH_JOB_SCRIPT=./rb-run-param-job.sh # bail-out default
fi
echo "  +++ post-validate: launch script is: \"${RLGIN_BATCH_JOB_SCRIPT}\""

echo "--------------" PRE-LAUNCH CHECK "----------"
echo pwd=`pwd`
echo ls -latr /etc/environment
ls -latr /etc/environment
echo ls -latr /home/${RLGIN_BATCH_USER}/.bashrc
ls -latr /home/${RLGIN_BATCH_USER}/.bashrc
#echo cat /home/${RLGIN_BATCH_USER}/.bashrc
#cat /home/${RLGIN_BATCH_USER}/.bashrc
echo ls -latr /home/${RLGIN_BATCH_USER}/.assure-mounts.sh
ls -latr /home/${RLGIN_BATCH_USER}/.assure-mounts.sh
echo ls -latr /home/${RLGIN_BATCH_USER}/.rb-job-launch
ls -latr /home/${RLGIN_BATCH_USER}/.rb-job-launch

cmd="\
export BATCH_JOB_ID=${BATCH_JOB_ID};\
export BATCH_TASK_INDEX=${BATCH_TASK_INDEX};\
export JOB_TAG=${JOB_TAG};\
export RLGIN_BATCH_JOB_PARAMS_PATH=${RLGIN_BATCH_JOB_PARAMS_PATH};\
export RLGIN_BATCH_JOB_SCRIPT=${RLGIN_BATCH_JOB_SCRIPT}
cd /home/${RLGIN_BATCH_USER};\
./.rb-job-launch"

echo "##########################################"
echo "### calling su -l -c \""${cmd}"\" ###"
echo "##########################################"
su -l ${RLGIN_BATCH_USER} -c "${cmd}"

echo after  ----------
id 
whoami

# sleep 300

